// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AccountTie {
  id          Int      @id @default(autoincrement())
  phoneNumber String   @unique
  account     Account?
}

model Account {
  id                    Int       @id @default(autoincrement())
  firstName             String
  lastName              String
  email                 String    @unique
  confirmedEmail        Boolean   @default(false)
  confirmedEmailToken   String?
  confirmedEmailExpires DateTime?
  password              String
  passwordResetToken    String?
  passwordResetExpires  DateTime?
  role                  String    @default("USER") @db.VarChar(20)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  accountTie    AccountTie @relation(fields: [accountTie_id], references: [id])
  accountTie_id Int        @unique

  clients  Client[]
  products Product[]
  requests Request[]
}

model Client {

  id        Int      @id @default(autoincrement())
  name      String
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account    Account @relation(fields: [account_id], references: [id])
  account_id Int

  requests Request[]
}

model Product {

  id        Int      @id @default(autoincrement())
  name      String
  basePrice Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account    Account @relation(fields: [account_id], references: [id])
  account_id Int

  requests Request[]
}

model Request {

  id        Int      @id @default(autoincrement())
  title     String
  status    String   @default("TODO") @db.VarChar(20)
  price     Float
  paidOut   Float    @default(0)
  balance   Float    @default(0)
  expiresIn DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account Account @relation(fields: [account_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
  client  Client  @relation(fields: [client_id], references: [id])

  account_id Int
  product_id Int
  client_id  Int
}
